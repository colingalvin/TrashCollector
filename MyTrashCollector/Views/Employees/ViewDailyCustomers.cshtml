@model IEnumerable<MyTrashCollector.Models.Customer>

@{
    ViewData["Title"] = "ViewDailyCustomers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Route for @DateTime.Today.ToString("D")</h1>

<script>
    let addresses = [];
</script>

<p>
    <a asp-action="ViewAllCustomers">View All Customers</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegularPickupDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpecialPickupStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <script>
                addresses.push([@item.Address.Latitude, @item.Address.Longitude]);
            </script>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.StreetAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegularPickupDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpecialPickupStatus)
                </td>
                <td>
                    <a asp-action="ConfirmPickup" asp-route-id="@item.CustomerId">Confirm Pickup</a> |
                    <a asp-action="CustomerDetails" asp-route-id="@item.CustomerId">View Customer Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="map" style="height: 600px; width: 100%;"></div>

<script>
    if (addresses.length > 0) {
        function initMap() {
            var bounds = new google.maps.LatLngBounds();
            var map = new google.maps.Map(document.getElementById("map"), {
            });
            for (var i = 0; i < addresses.length; i++) {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(addresses[i][0], addresses[i][1]),
                    map: map
                });
                bounds.extend(marker.position);
            }
            map.fitBounds(bounds);
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
